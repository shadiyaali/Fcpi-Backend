# Generated by Django 5.0.4 on 2024-09-05 10:52

import accounts.manager
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        
    ]

    operations = [
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, max_length=4, null=True)),
                ('email_verification_token', models.CharField(blank=True, max_length=191, null=True)),
                ('forget_password_token', models.CharField(blank=True, max_length=191, null=True)),
                ('password_is_null', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('userrole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.userrole')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enrolled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_enrollments', to='admins.event')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userevent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralEnrolled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_event_enrollments', to='admins.generalevent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_userevent', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='user/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('primary_position', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('primary_pharmacy_degree', models.CharField(blank=True, max_length=100, null=True)),
                ('secondary_pharmacy_degree', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_degrees', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('pharmacy_college_name', models.CharField(blank=True, max_length=100, null=True)),
                ('pharmacy_college_degree', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.IntegerField(null=True)),
                ('current_work_institution', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presentation_content', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('speaker_delivery', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('presentation_duration', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('audio_video_quality', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('how_did_you_hear', models.CharField(choices=[('E', 'Email'), ('S', 'Social Media Post'), ('W', 'WhatsApp'), ('F', 'FCPI Website'), ('R', 'Referral'), ('I', 'IDCongress2023'), ('O', 'Other')], max_length=1, null=True)),
                ('suggestion', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('single_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='admins.singleevent')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('single_event', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='GeneralFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presentation_content', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('speaker_delivery', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('presentation_duration', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('audio_video_quality', models.CharField(choices=[('VS', 'Very Satisfied'), ('SS', 'Somewhat Satisfied'), ('N', 'Neutral'), ('US', 'Unsatisfied'), ('VU', 'Very Unsatisfied')], max_length=2, null=True)),
                ('how_did_you_hear', models.CharField(choices=[('E', 'Email'), ('S', 'Social Media Post'), ('W', 'WhatsApp'), ('F', 'FCPI Website'), ('R', 'Referral'), ('I', 'IDCongress2023'), ('O', 'Other')], max_length=1, null=True)),
                ('suggestion', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('single_event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_feedbacks', to='admins.generalsingleevent')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='general_feedback', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('single_event', 'created_at')},
            },
        ),
    ]
